[buildout]

# The parts directory needs to be outside the GAE app directory
# because the SDK will be installed there and you can't have
# the SDK as a sub-directory of the GAE app.
parts-directory = ${:directory}/../parts


parts =
   serve
   test
   deploy-prod



# google-appengine-python:
#
#     Google App Engine needs PIL installed to be able
#     to use the image function. Create a Python with Pillow
#     installed in it.
#
#     It is possible to do with with zc.recipe.egg,
#     however, this is a more strait forward solution
#     as long as you have the Pillow requirenments on the
#     system as well as virtualenv.
#
[google-appengine-python]
recipe = collective.recipe.cmd
on_install = true
location = ${buildout:parts-directory}/${google-appengine-python}
cmds =
    virtualenv ${:location}
    cd ${:location}
    bin/easy_install Pillow

interpreter = google-appengine-python
eggs = Pillow



# google-appengine-sdk:
#
#     The SDK itself.
#
[google-appengine-sdk]
recipe = gexagonit.recipe.download
url = https://storage.googleapis.com/appengine-sdks/featured/google_appengine_1.9.30.zip
strip-top-level-dir = true



# gaebuildoutdemo.app:
#
#     This is our egg. This recipe should install it along with it's dependencies.
#
[gaebuildoutdemo.app]
recipe = zc.recipe.egg
eggs = gaebuildoutdemo.app


# If you want to use the Google App Engine version of the libraries
# you will need to specifiy them here as well as in app.yaml
extra-paths =
    ../parts/google-appengine


# relative-paths ensures that when zc.recipe.egg creates
# the console script gaebuildoutdemo_app_do_nothing it 
# does so with sys.path references being relative. This
# allows the script and the contents of this directory 
# to be pushed to the App Engine service.
relative-paths = true



# serve:
#
#     A convienence script in the bin directory to run the SDK local server
#     with our application.
#
[serve]
recipe = collective.recipe.scriptgen
cmd = ${google-appengine-python:location}/bin/python
arguements = 
    ${google-appengine-sdk:location}/dev_appserver.py
    ${buildout:directory}



# test:
#
#     Because our App is a proper egg, we can use zc.recipe.testrunner
#     to run our tests. This give us alot of advantages and command line
#     options when running the tests.
#
[test]
recipe = zc.recipe.testrunner
eggs = ${gaebuildoutdemo.app:eggs}
extra-paths = ${gaebuildoutdemo.app:extra-paths}



# deploy-prod
#
#     A convienence script to deploy the application to Google App Engine.
#
[deploy-prod]
recipe = collective.recipe.scriptgen

application-id = gaebuildoutdemo-prod

cmd = ${google-appengine-sdk:location}/appcfg.py
arguements = 
	update
	-A '${:application-id}'
	${buildout:directory}

