[buildout]

# The parts directory needs to be outside the GAE app directory
# because the SDK will be installed there and you can't have
# the SDK as a sub-directory of the GAE app.
parts-directory = ${:directory}/../parts


parts =
   serve
   test
   deploy-prod



[google-appengine-sdk]
recipe = gexagonit.recipe.download
url = https://storage.googleapis.com/appengine-sdks/featured/google_appengine_1.9.30.zip
strip-top-level-dir = true



[google-appengine-python]

# Create a Python with Pillow installed in it.
# It is possible to do with with zc.recipe.egg,
# however, this is a more strait forward solution
# as long as you have the Pillow requirenments on the
# system and virtualenv.

recipe = collective.recipe.cmd
on_install = true
location = ${buildout:parts-directory}/${google-appengine-python}
cmds =
    virtualenv ${:location}
    cd ${:location}
    bin/easy_install Pillow

interpreter = google-appengine-python
eggs = Pillow



[gaebuildoutdemo.app]
recipe = zc.recipe.egg
eggs = gaebuildoutdemo.app

# If you want to use the Google App Engine version of the libraries
# you will need to specifiy them here as well as in app.yaml
extra-paths =
    ../parts/google-appengine

relative-paths = true
interpreter = py-sd.www



[serve]
recipe = collective.recipe.scriptgen
cmd = ${google-appengine-python:location}/bin/python
arguements =  ${google-appengine-sdk:location}/dev_appserver.py ${buildout:directory}



[test]
recipe = zc.recipe.testrunner
eggs = ${gaebuildoutdemo.app:eggs}
extra-paths = ${gaebuildoutdemo.app:extra-paths}



[deploy-prod]
recipe = collective.recipe.scriptgen

application-id = gaebuildoutdemo-prod

cmd = ${google-appengine-sdk:location}/appcfg.py
arguements = 
	update
	-A '${:application-id}'
	${buildout:directory}

