[buildout]

# Our egg starts from the parent directory
develop = ..

# Build the following parts and their dependencies
parts =
   serve
   test
   deploy-prod


# The parts directory needs to be outside the GAE app directory
# because the SDK will be installed there and you can't have
# the SDK as a sub-directory of the GAE app.
parts-directory = ${:directory}/../parts




#### Build a python for Google App Engine. ####


# Build the Pillow library dependencies

[libjpeg]
recipe = zc.recipe.cmmi
url = http://www.ijg.org/files/jpegsrc.v9a.tar.gz

[zlib]
recipe = zc.recipe.cmmi
url = http://zlib.net/zlib-1.2.8.tar.gz

[libpng]
recipe = zc.recipe.cmmi
url = ftp://ftp.simplesystems.org/pub/libpng/png/src/libpng16/libpng-1.6.20.tar.gz

[libtiff]
recipe = zc.recipe.cmmi
url = ftp://ftp.remotesensing.org/pub/libtiff/tiff-4.0.6.tar.gz


# Build Pillow

[Pillow-build-environment]

[Pillow-build-env:macosx]
CFLAGS=-Qunused-arguements
CPPFLAGS=-Qunused-arguements

[Pillow]
recipe = zc.recipe.egg:custom
eggs = Pillow
rpath = 
    ${libjpeg:location}/lib
    ${zlib:location}/lib
    ${libpng:location}/lib
    ${libtiff:location}/lib
library-dirs = 
    ${libjpeg:location}/lib
    ${zlib:location}/lib
    ${libpng:location}/lib
    ${libtiff:location}/lib
include-dirs = 
    ${libjpeg:location}/include
    ${zlib:location}/include
    ${libpng:location}/include
    ${libtiff:location}/include

environment = Pillow-build-environment


# Build the python for google app engine

[google-appengine-python]
recipe = zc.recipe.egg
eggs = Pillow
interpreter = google-appengine-python

# make sure we build Pillow before this
_depends = ${Pillow:eggs}



#### Install the Google App ENgine SDK ####

[google-appengine-sdk]
recipe = hexagonit.recipe.download
url = https://storage.googleapis.com/appengine-sdks/featured/google_appengine_1.9.30.zip
strip-top-level-dir = true



#### Build our application ####

[adamandpaul.gwebdemo]
recipe = zc.recipe.egg
eggs = adamandpaul.gwebdemo

# If you want to use the Google App Engine version of the libraries
# you will need to specifiy them here as well as in app.yaml
extra-paths =
    ../parts/google-appengine-sdk

# Important! relative-paths ensures that when zc.recipe.egg creates
# the console script gaebuildoutdemo_app_do_nothing it 
# does so with sys.path references being relative. This
# allows the script and the contents of this directory 
# to be pushed to the App Engine service.
relative-paths = true



#### Build convienence scripts ####


# bin/serve - script in the bin directory to run the SDK local server
# with our application.
[serve]
recipe = collective.recipe.scriptgen
cmd = bin/${google-appengine-python:interpreter}
arguments = 
    ${google-appengine-sdk:location}/dev_appserver.py
    --host ${:host}
    --port ${:port}
    --admin_host ${:host}
    --admin_port ${:admin_port}
    ${buildout:directory}

host = 127.0.0.1
port = 8080
admin_port = 8000

# Make sure we build our application egg first
_depends = ${adamandpaul.gwebdemo:eggs}


# bin/test - Because our App is a proper egg, we can use zc.recipe.testrunner
# to run our tests. This give us alot of advantages and command line
# options when running the tests.
[test]
recipe = zc.recipe.testrunner
eggs = ${adamandpaul.gwebdemo:eggs}
extra-paths = ${adamandpaul.gwebdemo:extra-paths}


# bin/deploy-prod - Deploy our application to the Google App Engine Service
[deploy-prod]
recipe = collective.recipe.scriptgen

application-id = gwebdemo-prod

cmd = ${google-appengine-sdk:location}/appcfg.py
arguments = 
	update
	-A ${:application-id}
	${buildout:directory}

